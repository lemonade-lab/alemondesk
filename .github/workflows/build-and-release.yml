name: 发布版本

on:
  push:
    tags:
      - '*'

env:
  NODE_VERSION: "22.21.0"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'ALemonDesk-linux-amd64'
            platform:  'linux/amd64'
            node_arch: 'linux-x64'
            os: 'ubuntu-latest'
          - name: 'ALemonDesk-win-amd64.exe'
            platform:  'windows/amd64'
            node_arch: 'win-x64'
            os: 'windows-latest'
          - name: 'ALemonDesk'
            platform:  'darwin/universal'
            node_arch: 'darwin-arm64'
            os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/yarn.lock') }}
      - name: install frontend dependencies and build
        run: |
            yarn --cwd frontend install
            yarn --cwd frontend build
      - name: install template dependencies and compress
        run: |
            yarn --cwd resources/template install
            tar -czf resources/template/node_modules.tar.gz -C resources/template node_modules
      - name: delete node_modules (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          rm -rf resources/template/node_modules
      - name: delete node_modules (Windows)
        if: runner.os == 'Windows'
        run: |
          Remove-Item resources/template/node_modules -Recurse -Force
      - name: download Nodejs (Linux)
        if: runner.os == 'Linux'
        run: |
          wget https://nodejs.org/dist/v${{ env.NODE_VERSION }}/node-v${{ env.NODE_VERSION }}-${{ matrix.build.node_arch }}.tar.xz -O resources/node.tar.xz
      - name: download Nodejs (Windows)
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -Uri "https://nodejs.org/dist/v${{ env.NODE_VERSION }}/node-v${{ env.NODE_VERSION }}-${{ matrix.build.node_arch }}.zip" -OutFile "resources/node.zip"
      - name: download Nodejs (macOS)
        if: runner.os == 'macOS'
        run: |
          wget https://nodejs.org/dist/v${{ env.NODE_VERSION }}/node-v${{ env.NODE_VERSION }}-${{ matrix.build.node_arch }}.tar.xz -O resources/node.tar.xz
      - name: Build wails
        uses: dAppServer/wails-build-action@main
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          go-version: "1.25"
          node-version: "22.x"
          wails-version: "v2.10.2"
          build-obfuscate: true
          build: true
          package: true
          sign: false
          nsis: ${{ matrix.build.platform == 'windows/amd64' }}